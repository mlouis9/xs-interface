.. _serpentdata:

Serpent Data
=============

.. toctree::
   :maxdepth: 2
   :hidden:
   :caption: Contents:

   serpent_files//coe.rst
   serpent_files//controlDict.rst
   serpent_files//template.rst
   serpent_files//output_fuel0.rst
   serpent_files//output_ref0.rst
   serpent_files//fuel.rst
   serpent_files//reflector.rst


Description
-----------

To execute the problem, the user is required to prepare the following files:

1. A single control deck (:ref:`serpent_controldeck`) file - defining universe and template files to be read.
2. Universe file/s (:ref:`serpent_fuel0` and :ref:`serpent_ref0`) - two universe files are defined here for the fuel and reflector.
3. Template file/s (:ref:`serpent_template`) - a single template file is defined here.
4. Serpent branch .coe files (:ref:`serpent_branchcoe`) - a single file is used here.

Each file referenced above provides description of the states, data, and the template used for outputting data.



Application of ``xsInterface``:
-------------------------------


.. code::

    # ---------------------------------------------------------------------
    # Import xsInterface
    # ---------------------------------------------------------------------
    from xsInterface.functions.main import Main

    # ---------------------------------------------------------------------
    # Define the Input Control File
    # ---------------------------------------------------------------------
    inpFile = '.\\controlDict'
    
    # ---------------------------------------------------------------------
    # Read Input File
    # ---------------------------------------------------------------------
    xs = Main(inputFile)  # Read the control dict
    xs.Read()   # Read xs data and templates and populate data
    
    # ---------------------------------------------------------------------
    # Write to output files
    # ---------------------------------------------------------------------
    xs.Write()
    
    # ---------------------------------------------------------------------
    # Basic capablity to obtain results
    # ---------------------------------------------------------------------
    xs.Table("fuel0", ['infkappa'], time=0.0, history='nom', fuel=900, boron=500, dens=700)
    xs.Values("ref0", "infsp0", fuel=900)
    

Outputs generated by ``xsInterface``:
-------------------------------------
    
After executing the ``xs.Write()`` command in the code snippet provided above, the following files are created.

1. :ref:`serpent_outputfuel0`.
2. :ref:`serpent_outputref0`.

